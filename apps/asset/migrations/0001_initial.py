# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2019-04-19 13:32
from __future__ import unicode_literals

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HostGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='主机组名')),
                ('ctime', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('utime', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '主机组',
                'verbose_name_plural': '主机组',
                'db_table': 'hostgroup',
            },
        ),
        migrations.CreateModel(
            name='Hosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=32, unique={'unique': '主机名已存在'}, verbose_name='主机名')),
                ('server_type', models.CharField(choices=[('physical', '物理机'), ('virtual', '虚拟机'), ('instance', '云主机')], default='instance', max_length=10, verbose_name='服务器类型')),
                ('wip', models.GenericIPAddressField(error_messages={'blank': '外网地址不能为空', 'unique': '该外网地址已存在'}, unique=True, verbose_name='外网IP')),
                ('nip', models.GenericIPAddressField(error_messages={'blank': '内网地址不能为空', 'unique': '该内网地址已存在'}, unique=True, verbose_name='内网IP')),
                ('status', models.CharField(choices=[('online', '上线'), ('offline', '下线')], default='offline', max_length=10, verbose_name='状态')),
                ('instance_id', models.CharField(blank=True, max_length=64, null=True, verbose_name='云服务器ID')),
                ('sn', models.CharField(blank=True, max_length=64, null=True, verbose_name='SN编号')),
                ('cpu_info', models.CharField(blank=True, max_length=128, null=True, verbose_name='CPU')),
                ('os', models.CharField(blank=True, max_length=64, null=True, verbose_name='系统')),
                ('memory', models.SmallIntegerField(blank=True, null=True, verbose_name='内存/G')),
                ('disk', models.IntegerField(blank=True, null=True, verbose_name='硬盘/G')),
                ('ctime', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('utime', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('desc', models.CharField(blank=True, max_length=200, null=True, verbose_name='描述')),
                ('server_id', models.IntegerField(blank=True, null=True, verbose_name='ServerID')),
                ('game_id', models.IntegerField(blank=True, null=True, verbose_name='GameID')),
                ('host_vars', models.TextField(blank=True, null=True, verbose_name='主机变量')),
            ],
            options={
                'verbose_name': '资产',
                'verbose_name_plural': '资产',
                'db_table': 'hosts',
                'permissions': (('can_connect_serverinfo', '可以连接主机'), ('can_kill_serverinfo', '可以强制用户下线'), ('can_monitor_serverinfo', '可以查看录像'), ('can_view_serverinfo', '可以查看主机'), ('can_filemanage_serverinfo', '可以管理文件')),
            },
        ),
        migrations.CreateModel(
            name='HostUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='名称')),
                ('auth_method', models.CharField(choices=[('ssh-password', 'SSH/Password'), ('ssh-key', 'SSH/KEY')], default='ssh-password', max_length=16, verbose_name='认证类型')),
                ('username', models.CharField(max_length=32, verbose_name='用户名')),
                ('ssh_port', models.IntegerField(default=22, verbose_name='端口')),
                ('password', models.CharField(blank=True, max_length=32, null=True, verbose_name='密码')),
                ('key', models.TextField(blank=True, null=True, verbose_name='秘钥串')),
            ],
            options={
                'verbose_name': '主机用户信息',
                'verbose_name_plural': '主机用户信息',
                'db_table': 'remoteuser',
            },
        ),
        migrations.CreateModel(
            name='IDC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'unique': '该机房已存在，请不要重复添加'}, max_length=32, unique=True, verbose_name='机房')),
                ('ctime', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('utime', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '机房',
                'verbose_name_plural': '机房',
                'db_table': 'idc',
            },
        ),
        migrations.CreateModel(
            name='UserHostPer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ctime', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('utime', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('bind_hosts', models.ManyToManyField(blank=True, to='asset.Hosts', verbose_name='授权主机')),
                ('host_groups', models.ManyToManyField(blank=True, to='asset.HostGroup', verbose_name='授权主机组')),
            ],
            options={
                'verbose_name': '用户连接主机权限',
                'verbose_name_plural': '用户连接主机权限',
                'db_table': 'hostper',
            },
        ),
    ]
